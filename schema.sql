-- Baichuan Zhou (baichuan@bu.edu)
-- Please note I didn't put any check/assertion here.
-- We talked about this in the lab: MySQL DOES NOT support 'check'
-- I only put some very basic constraints. You should put more based on your assumption
-- THERE IS NO NEED TO FOLLOW THIS SCHEMA AS LONG AS YOUR DESIGN MAKES SENSE!

DROP DATABASE photoshare;
CREATE DATABASE PhotoShareSolution;
USE PhotoShareSolution;

-- CREATE USER TABLE
CREATE TABLE Users (
    uid INT NOT NULL AUTO_INCREMENT,
    gender VARCHAR(6),
    email VARCHAR(40) UNIQUE,
    password VARCHAR(40) NOT NULL,
    dob DATE,
    hometown VARCHAR(40),
    fname VARCHAR(40) NOT NULL,
    lname VARCHAR(40) NOT NULL,
    PRIMARY KEY (uid)
);

-- CREATE FRIENDSHIP TABLE
CREATE TABLE Friendships(
	uid1 INT NOT NULL,
	uid2 INT NOT NULL,
	PRIMARY KEY(uid1, uid2),
	FOREIGN KEY (uid1) REFERENCES USER(uid) ON DELETE CASCADE,
	FOREIGN KEY (uid2) REFERENCES USER(uid) ON DELETE CASCADE
);


-- CREATE Album TABLE (include album entity and 'own' relationship)
CREATE TABLE Albums(
	album_id INT NOT NULL AUTO_INCREMENT,
	name VARCHAR(40) NOT NULL,
	DOC TIMESTAMP NOT NULL,
	UID INT NOT NULL,
	PRIMARY KEY (AID),
	FOREIGN KEY (UID) REFERENCES USER(UID) ON DELETE CASCADE
);

-- CREATE Photo TABLE (include photo entity and 'contains' relationship)
CREATE TABLE Photos(
	photo_id INT NOT NULL AUTO_INCREMENT,
	caption VARCHAR(200),
	imgdata BLOB NOT NULL,
	album_id INT NOT NULL,
	PRIMARY KEY (PID),
	FOREIGN KEY (AID) REFERENCES ALBUM(AID) ON DELETE CASCADE
);

-- CREATE Comment TABLE (include comment entity and 'comment' relationship)
CREATE TABLE Comment(
	CID INT NOT NULL AUTO_INCREMENT,
	CONTENT VARCHAR(200) NOT NULL,
	DOC TIMESTAMP NOT NULL,
	UID INT NOT NULL,
	PID INT NOT NULL,
	PRIMARY KEY (CID),
	FOREIGN KEY (UID) REFERENCES USER(UID) ON DELETE CASCADE,
	FOREIGN KEY (PID) REFERENCES PHOTO(PID) ON DELETE CASCADE
);

-- CREATE THE LIKETABLE. WE CAN'T name it LIKE
CREATE TABLE LikeTable(
	UID INT NOT NULL,
	PID INT NOT NULL,
	DOC TIMESTAMP NOT NULL,
        PRIMARY KEY (UID, PID),
	FOREIGN KEY (UID) REFERENCES USER(UID) ON DELETE CASCADE,
	FOREIGN KEY (PID) REFERENCES PHOTO(PID) ON DELETE CASCADE
);


-- CREATE Tag TABLE
CREATE TABLE Tags(
	HASHTAG VARCHAR(40) NOT NULL,
	PRIMARY KEY (HASHTAG)
);

-- CREATE Associate Table
CREATE TABLE Associates(
	pid INT NOT NULL,
	hashtag VARCHAR(40) NOT NULL,
        PRIMARY KEY (PID, HASHTAG),
	FOREIGN KEY (HASHTAG) REFERENCES TAG(HASHTAG) ON DELETE CASCADE,
	FOREIGN KEY (PID) REFERENCES PHOTO(PID) ON DELETE CASCADE
);

INSERT INTO Users (email, password) VALUES('test@bu.edu', 'hello')
